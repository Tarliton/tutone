package {{.PackageName}}

{{- if gt (len .Imports) 0 }}
import (
  {{- range .Imports}}
  {{.}}
  {{- end}}
)
{{- end}}

{{range .Commands}}
{{- $cmdNameTitleCase := .Name | title -}}
{{- $cmdVarName := print "cmd" $cmdNameTitleCase -}}

var {{$cmdVarName}} = &cobra.Command{
	Use: {{.Name | quote }},
	Short: {{.ShortDescription | quote }},
  Long: {{.LongDescription | quote }},
}

{{range .Subcommands}}
{{- $nameTitleCase := .Name | title -}}
{{- $cmdVarName := print "cmd" $nameTitleCase -}}
{{- $inputVarName := print .Name "Input" -}}

{{range .Flags}}
  var {{.VariableName}} {{.Type}}
{{- end}}

var {{$cmdVarName}} = &cobra.Command{
  Use: {{.Name | quote }},
  Short: {{.ShortDescription | quote }},
  Long: {{.LongDescription | quote }},
  Example: "newrelic nerdgraph mutation {{.Name}} --input='{json}'",
  Run: func(cmd *cobra.Command, args []string) {
    client.WithClient(func(nrClient *newrelic.NewRelic) {
      var input {{.InputType}}
			err := json.Unmarshal([]byte({{.Name}}Input), &input)
			utils.LogIfFatal(err)

      resp, err := {{.ClientMethod}}(accountID, input)
			utils.LogIfFatal(err)

			utils.LogIfFatal(output.Print(resp))
    })
  },
}
{{- end}}
{{- end}}

func init() {
{{- range .Commands}}
{{- $parentCmdNameTitleCase := .Name | title -}}
{{- $parentCmdVarName := print "cmd" $parentCmdNameTitleCase -}}
  Command.AddCommand({{$parentCmdVarName}})

{{ range .Subcommands}}
{{- $subCmdNameTitleCase := .Name | title -}}
{{- $cmdVarName := print "cmd" $subCmdNameTitleCase -}}
{{- $inputVarName := print .Name "Input" -}}

  {{$parentCmdVarName}}.AddCommand({{$cmdVarName}})

{{ range .Flags}}
  {{- $defaultVal := .DefaultValue | quote -}}
  {{- if (eq .Type "int") -}}
    {{- $defaultVal = 0 -}}
  {{- end}}

  {{ $cmdVarName }}.Flags().{{- .FlagMethodName -}}(&{{.VariableName}}, {{.Name | quote }}, {{$defaultVal}}, {{.Description | quote}})
  {{- if .Required}}
  utils.LogIfError({{- $cmdVarName -}}.MarkFlagRequired({{.Name | quote}}))
  {{end}}
{{- end}}
{{- end}}
{{- end}}
}
